ÖzGür.AI-LocalProject de uygun venv eğer yoksa "python -m venv venv" ile venv oluşturuyorsun, 
 "venv\Scripts\activate" yi çalıştırıp projeyi aktif ediyorsun,

-------------------------------------------------------------------------------------------------------------

cd ÖzGür.AI_app a gidiuyosun ve sonra "python app.py" yazıp server i başlatıyorsun

-------------------------------------------------------------------------------------------------------------

yeni venv oluşturduğunda "pip install Flask markupsafe google-generativeai python-dotenv markdown2 bleach load_dotenv"
yaz ve kütüphaneleri indir.

-------------------------------------------------------------------------------------------------------------

pip yükseltmek için "python.exe -m pip install --upgrade pip" kullan

-------------------------------------------------------------------------------------------------------------

Projeni github a aktarmak için sırası ile:

1. önce cd ile projenin ana klasörüne git
2.   git init
3.   git add .
4.   git commit -m "commitAdi"
5.   git remote add origin https://github.com/rmzn07-VSC/ÖzGür.AI-pro.git
6.   git push -u origin main

Projeni güncellemek için ise:

1.   git add .
2.   git commit -m "neEklendiyseOnuYaz"
3.   git branch -M main
4.   git push origin main


...tanımları:

    git init: Yeni bir Git deposu oluşturur.

    git clone: Mevcut bir depoyu kopyalar.

    git add: Değişiklikleri staging alanına ekler.

    git commit: Değişiklikleri kaydeder.

    git push: Yerel commit'leri uzak depoya gönderir.

    git pull: Uzak depodan değişiklikleri alır ve yerel depoyla birleştirir.

    git status: Değişiklikleri ve staging alanının durumunu gösterir.

    git branch: Branch'lerle çalışmak için kullanılır.

    git checkout: Branch'ler arasında geçiş yapar veya yeni branch oluşturur.

    git merge: Branch'leri birleştirir.

    git log: Commit geçmişini görüntüler.

    -------------------------------------------------------------------------------------------------------------
